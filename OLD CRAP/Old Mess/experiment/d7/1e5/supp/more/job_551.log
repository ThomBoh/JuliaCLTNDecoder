ERROR: LoadError: MethodError: no method matching iterate(::Nothing)
Closest candidates are:
  iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:664
  iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:664
  iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s79", var"#s78"} where {var"#s79", var"#s78"<:Dict}, Base.ValueIterator{var"#s77"} where var"#s77"<:Dict} at dict.jl:693
  ...
Stacktrace:
  [1] indexed_iterate(I::Nothing, i::Int64)
    @ Base ./tuple.jl:89
  [2] MPS(A::ITensor{4}, sites::Vector{IndexSet{1, Index{Int64}, Tuple{Index{Int64}}}}; leftinds::Index{Int64}, orthocenter::Int64, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:ortho, :cutoff, :maxdim, :svd_alg), Tuple{String, Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1388
  [3] setindex!(ψ::MPS, A::ITensor{4}, r::UnitRange{Int64}; orthocenter::Int64, perm::Vector{Int64}, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:ortho, :cutoff, :maxdim, :svd_alg), Tuple{String, Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1328
  [4] setindex!(::MPS, ::ITensor{4}, ::UnitRange{Int64}, ::Pair{Symbol, Any}, ::Vararg{Pair{Symbol, Any}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:orthocenter, :perm), Tuple{Int64, Vector{Int64}}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1340
  [5] swapbondsites(ψ::MPS, b::Int64; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:ortho, :cutoff, :maxdim, :svd_alg), Tuple{String, Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1419
  [6] movesite(ψ::MPS, n1n2::Pair{Int64, Int64}; orthocenter::Int64, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1447
  [7] _movesites(ψ::MPS, ns::Vector{Int64}, ns′::Vector{Int64}; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1474
  [8] movesites(ψ::MPS, nsns′::Vector{Pair{Int64, Int64}}; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1495
  [9] product(As::Vector{ITensor}, ψ::MPS; move_sites_back::Bool, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1656
 [10] runcircuit(M::MPS, circuit_tensors::Vector{ITensor}; apply_dag::Nothing, cutoff::Float64, maxdim::Int64, svd_alg::String, move_sites_back::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ PastaQ ~/.julia/packages/PastaQ/9VxGO/src/circuits/runcircuit.jl:86
 [11] #runcircuit#99
    @ ~/.julia/packages/PastaQ/9VxGO/src/circuits/runcircuit.jl:188 [inlined]
 [12] SurfCirc(dz::Int64, dx::Int64, nr::Int64, PEZ::Matrix{Int64}, PEX::Matrix{Int64}, Synz::Matrix{Int64}, Synx::Matrix{Int64}, zsch::Vector{Any}, xsch::Vector{Any}, bsch::Array{Int64, 3}, layout::Vector{Any}, ql::Matrix{Int64}, zl::Vector{Int64}, xl::Vector{Int64}, p::Float64, al2::Int64, tmeas::Float64, k2::Float64, nth::Int64, pmz::Float64, pmx::Float64, acc::Float64, bd::Int64)
    @ Main /shared/MLSurface/JuliaCLTNDecoder/experiment/d7/1e5/supp/more/mlsurfnc.jl:1337
 [13] macro expansion
    @ /shared/MLSurface/JuliaCLTNDecoder/experiment/d7/1e5/supp/more/mlsurfnc.jl:1432 [inlined]
 [14] macro expansion
    @ ./timing.jl:287 [inlined]
 [15] SurfMC(dz::Int64, dx::Int64, nr::Int64, p::Float64, al2::Int64, tmeas::Float64, k2::Float64, nth::Int64, acc::Float64, bd::Int64, err::Float64, nt::Int64; sim_id::Int64)
    @ Main /shared/MLSurface/JuliaCLTNDecoder/experiment/d7/1e5/supp/more/mlsurfnc.jl:1431
 [16] top-level scope
    @ /shared/MLSurface/JuliaCLTNDecoder/experiment/d7/1e5/supp/more/mlsurfnc.jl:1514
in expression starting at /shared/MLSurface/JuliaCLTNDecoder/experiment/d7/1e5/supp/more/mlsurfnc.jl:1512
mu is
0.005
number of trials is
200
number of Z or Y failures is
1
number of X failures is
0
average trial time
1.4003171973449995
mu is
0.0025
number of trials is
400
number of Z or Y failures is
1
number of X failures is
0
average trial time
2.6484098149349973
mu is
0.0016666666666666668
number of trials is
600
number of Z or Y failures is
1
number of X failures is
0
average trial time
3.886228621824999
mu is
0.00125
number of trials is
800
number of Z or Y failures is
1
number of X failures is
0
average trial time
5.129803602364999
mu is
0.001
number of trials is
1000
number of Z or Y failures is
1
number of X failures is
0
average trial time
6.370116373655006
mu is
0.0008333333333333334
number of trials is
1200
number of Z or Y failures is
1
number of X failures is
0
average trial time
7.6058810861950015
mu is
0.0007142857142857143
number of trials is
1400
number of Z or Y failures is
1
number of X failures is
0
average trial time
8.835887923959996
mu is
0.000625
number of trials is
1600
number of Z or Y failures is
1
number of X failures is
0
average trial time
10.059739259264996
mu is
0.0005555555555555556
number of trials is
1800
number of Z or Y failures is
1
number of X failures is
0
average trial time
11.305610014785005
mu is
0.0005
number of trials is
2000
number of Z or Y failures is
1
number of X failures is
0
average trial time
12.557966783150011
mu is
0.00045454545454545455
number of trials is
2200
number of Z or Y failures is
1
number of X failures is
0
average trial time
13.805581379225
mu is
0.0004166666666666667
number of trials is
2400
number of Z or Y failures is
1
number of X failures is
0
average trial time
15.02901900643499
mu is
0.0003846153846153846
number of trials is
2600
number of Z or Y failures is
1
number of X failures is
0
average trial time
16.260864194774975
mu is
0.00035714285714285714
number of trials is
2800
number of Z or Y failures is
1
number of X failures is
0
average trial time
17.50102680005497
mu is
0.0003333333333333333
number of trials is
3000
number of Z or Y failures is
1
number of X failures is
0
average trial time
18.759355819564963
mu is
0.0003125
number of trials is
3200
number of Z or Y failures is
1
number of X failures is
0
average trial time
20.01104825732998
mu is
0.0002941176470588235
number of trials is
3400
number of Z or Y failures is
1
number of X failures is
0
average trial time
21.29314641559501
mu is
0.0002777777777777778
number of trials is
3600
number of Z or Y failures is
1
number of X failures is
0
average trial time
22.55070955008001
mu is
0.0002631578947368421
number of trials is
3800
number of Z or Y failures is
1
number of X failures is
0
average trial time
23.829802914570028
mu is
0.00025
number of trials is
4000
number of Z or Y failures is
1
number of X failures is
0
average trial time
25.10224064194004
mu is
0.0002380952380952381
number of trials is
4200
number of Z or Y failures is
1
number of X failures is
0
average trial time
26.393445287345063
mu is
0.00022727272727272727
number of trials is
4400
number of Z or Y failures is
1
number of X failures is
0
average trial time
27.707560028725084
mu is
0.0002173913043478261
number of trials is
4600
number of Z or Y failures is
1
number of X failures is
0
average trial time
29.011313023930082
mu is
0.00020833333333333335
number of trials is
4800
number of Z or Y failures is
1
number of X failures is
0
average trial time
30.337074401855077
mu is
0.0002
number of trials is
5000
number of Z or Y failures is
1
number of X failures is
0
average trial time
31.680741149200067
mu is
0.0001923076923076923
number of trials is
5200
number of Z or Y failures is
1
number of X failures is
0
average trial time
33.017820771785075
mu is
0.00018518518518518518
number of trials is
5400
number of Z or Y failures is
1
number of X failures is
0
average trial time
34.373038870555085
mu is
0.00017857142857142857
number of trials is
5600
number of Z or Y failures is
1
number of X failures is
0
average trial time
35.73760530609509
mu is
0.00017241379310344826
number of trials is
5800
number of Z or Y failures is
1
number of X failures is
0
average trial time
37.09644065623007
mu is
0.00016666666666666666
number of trials is
6000
number of Z or Y failures is
1
number of X failures is
0
average trial time
38.47393753784509
mu is
0.00016129032258064516
number of trials is
6200
number of Z or Y failures is
1
number of X failures is
0
average trial time
39.84257171150011
mu is
0.0003125
number of trials is
6400
number of Z or Y failures is
2
number of X failures is
0
average trial time
41.220977989085114
mu is
0.00030303030303030303
number of trials is
6600
number of Z or Y failures is
2
number of X failures is
0
average trial time
42.602540157930164
mu is
0.0002941176470588235
number of trials is
6800
number of Z or Y failures is
2
number of X failures is
0
average trial time
43.99247658053017
mu is
0.00028571428571428574
number of trials is
7000
number of Z or Y failures is
2
number of X failures is
0
average trial time
45.376642797920155
mu is
0.0002777777777777778
number of trials is
7200
number of Z or Y failures is
2
number of X failures is
0
average trial time
46.80759163254016
mu is
0.0002702702702702703
number of trials is
7400
number of Z or Y failures is
2
number of X failures is
0
average trial time
48.223147460365105
mu is
0.0002631578947368421
number of trials is
7600
number of Z or Y failures is
2
number of X failures is
0
average trial time
49.65434765042509
mu is
0.0002564102564102564
number of trials is
7800
number of Z or Y failures is
2
number of X failures is
0
average trial time
51.0737519786351
mu is
0.00025
number of trials is
8000
number of Z or Y failures is
2
number of X failures is
0
average trial time
52.474348809480105
mu is
0.00024390243902439024
number of trials is
8200
number of Z or Y failures is
2
number of X failures is
0
average trial time
53.90435343465516
mu is
0.0002380952380952381
number of trials is
8400
number of Z or Y failures is
2
number of X failures is
0
average trial time
55.321956837225144
mu is
0.00023255813953488373
number of trials is
8600
number of Z or Y failures is
2
number of X failures is
0
average trial time
56.769453744190166
mu is
0.00022727272727272727
number of trials is
8800
number of Z or Y failures is
2
number of X failures is
0
average trial time
58.2142703535652
mu is
0.00022222222222222223
number of trials is
9000
number of Z or Y failures is
2
number of X failures is
0
average trial time
59.65241516651024
mu is
0.0002173913043478261
number of trials is
9200
number of Z or Y failures is
2
number of X failures is
0
average trial time
61.102776187855206
mu is
0.0002127659574468085
number of trials is
9400
number of Z or Y failures is
2
number of X failures is
0
average trial time
62.553533839600206
mu is
0.00020833333333333335
number of trials is
9600
number of Z or Y failures is
2
number of X failures is
0
average trial time
64.00756641015023
mu is
0.00020408163265306123
number of trials is
9800
number of Z or Y failures is
2
number of X failures is
0
average trial time
65.46598493550519
mu is
0.0002
number of trials is
10000
number of Z or Y failures is
2
number of X failures is
0
average trial time
66.95058961331019
mu is
0.000196078431372549
number of trials is
10200
number of Z or Y failures is
2
number of X failures is
0
average trial time
68.41378444786021
mu is
0.0003846153846153846
number of trials is
10400
number of Z or Y failures is
4
number of X failures is
0
average trial time
69.88050416250015
mu is
0.0003773584905660377
number of trials is
10600
number of Z or Y failures is
4
number of X failures is
0
average trial time
71.35526804646511
mu is
0.00037037037037037035
number of trials is
10800
number of Z or Y failures is
4
number of X failures is
0
average trial time
72.82629078288016
mu is
0.0003636363636363636
number of trials is
11000
number of Z or Y failures is
4
number of X failures is
0
average trial time
74.30876579763517
mu is
0.00035714285714285714
number of trials is
11200
number of Z or Y failures is
4
number of X failures is
0
average trial time
75.78246334361506
The SVD algorithm `"divide_and_conquer"` has thrown an error,
likely because of a convergance failure. You can try
other SVD algorithms that may converge better using the
`alg` (or `svd_alg` if called through `factorize` or MPS/MPO functionality) keyword argument:

 - "divide_and_conquer" is a divide-and-conquer algorithm
   (LAPACK's `gesdd`). It is fast, but may lead to some innacurate
   singular values for very ill-conditioned matrices.
   It also may sometimes fail to converge, leading to errors
   (in which case `"qr_iteration"` or `"recursive"` can be tried).

 - `"qr_iteration"` (LAPACK's `gesvd`) is typically slower 
   than "divide_and_conquer", especially for large matrices,
   but is more accurate for very ill-conditioned matrices 
   compared to `"divide_and_conquer"`.

 - `"recursive"` is ITensor's custom SVD algorithm. It is very
   reliable, but may be slow if high precision is needed.
   To get an `svd` of a matrix `A`, an eigendecomposition of
   ``A^{\dagger} A`` is used to compute `U` and then a `qr` of
   ``A^{\dagger} U`` is used to compute `V`. This is performed
   recursively to compute small singular values.

Returning `nothing`. For an output `F = svd(A, ...)` you can check if
`isnothing(F)` in your code and try a different algorithm.

To suppress this message in the future, you can wrap the `svd` call in the
`@suppress` macro from the `Suppressor` package.

