ERROR: LoadError: MethodError: no method matching iterate(::Nothing)
Closest candidates are:
  iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:664
  iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:664
  iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s79", var"#s78"} where {var"#s79", var"#s78"<:Dict}, Base.ValueIterator{var"#s77"} where var"#s77"<:Dict} at dict.jl:693
  ...
Stacktrace:
  [1] indexed_iterate(I::Nothing, i::Int64)
    @ Base ./tuple.jl:89
  [2] MPS(A::ITensor{4}, sites::Vector{IndexSet{1, Index{Int64}, Tuple{Index{Int64}}}}; leftinds::Index{Int64}, orthocenter::Int64, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1388
  [3] setindex!(ψ::MPS, A::ITensor{4}, r::UnitRange{Int64}; orthocenter::Int64, perm::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1328
  [4] setindex!(::MPS, ::ITensor{4}, ::UnitRange{Int64}, ::Pair{Symbol, Any}, ::Vararg{Pair{Symbol, Any}, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1340
  [5] setindex!(::MPS, ::ITensor{4}, ::UnitRange{Int64}, ::Pair{Symbol, Any}, ::Pair{Symbol, Any}, ::Pair{Symbol, Any})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1340
  [6] product(o::ITensor{4}, ψ::MPS, ns::Vector{Int64}; move_sites_back::Bool, apply_dag::Bool, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1555
  [7] product(As::Vector{ITensor}, ψ::MPS; move_sites_back::Bool, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1650
  [8] runcircuit(M::MPS, circuit_tensors::Vector{ITensor}; apply_dag::Nothing, cutoff::Float64, maxdim::Int64, svd_alg::String, move_sites_back::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ PastaQ ~/.julia/packages/PastaQ/9VxGO/src/circuits/runcircuit.jl:86
  [9] #runcircuit#99
    @ ~/.julia/packages/PastaQ/9VxGO/src/circuits/runcircuit.jl:188 [inlined]
 [10] SurfCirc(dz::Int64, dx::Int64, nr::Int64, PEZ::Matrix{Int64}, PEX::Matrix{Int64}, Synz::Matrix{Int64}, Synx::Matrix{Int64}, zsch::Vector{Any}, xsch::Vector{Any}, bsch::Array{Int64, 3}, layout::Vector{Any}, ql::Matrix{Int64}, zl::Vector{Int64}, xl::Vector{Int64}, p::Float64, al2::Int64, tmeas::Float64, k2::Float64, nth::Int64, pmz::Float64, pmx::Float64, acc::Float64, bd::Int64)
    @ Main /shared/MLSurface/JuliaCLTNDecoder/experiment/d9/4e5/supp/more/mlsurfnc.jl:1337
 [11] macro expansion
    @ /shared/MLSurface/JuliaCLTNDecoder/experiment/d9/4e5/supp/more/mlsurfnc.jl:1432 [inlined]
 [12] macro expansion
    @ ./timing.jl:287 [inlined]
 [13] SurfMC(dz::Int64, dx::Int64, nr::Int64, p::Float64, al2::Int64, tmeas::Float64, k2::Float64, nth::Int64, acc::Float64, bd::Int64, err::Float64, nt::Int64; sim_id::Int64)
    @ Main /shared/MLSurface/JuliaCLTNDecoder/experiment/d9/4e5/supp/more/mlsurfnc.jl:1431
 [14] top-level scope
    @ /shared/MLSurface/JuliaCLTNDecoder/experiment/d9/4e5/supp/more/mlsurfnc.jl:1514
in expression starting at /shared/MLSurface/JuliaCLTNDecoder/experiment/d9/4e5/supp/more/mlsurfnc.jl:1512
mu is
0.0
number of trials is
200
number of Z or Y failures is
0
number of X failures is
0
average trial time
2.8555218827299997
mu is
0.0025
number of trials is
400
number of Z or Y failures is
1
number of X failures is
0
average trial time
5.561254011860004
mu is
0.0016666666666666668
number of trials is
600
number of Z or Y failures is
1
number of X failures is
0
average trial time
8.482135064374999
mu is
0.0025
number of trials is
800
number of Z or Y failures is
2
number of X failures is
0
average trial time
11.519539259439991
mu is
0.002
number of trials is
1000
number of Z or Y failures is
2
number of X failures is
0
average trial time
14.688942979995
mu is
0.0016666666666666668
number of trials is
1200
number of Z or Y failures is
2
number of X failures is
0
average trial time
17.908905764359996
mu is
0.0014285714285714286
number of trials is
1400
number of Z or Y failures is
2
number of X failures is
0
average trial time
21.251069171675002
mu is
0.001875
number of trials is
1600
number of Z or Y failures is
3
number of X failures is
0
average trial time
24.597347301765
mu is
0.0022222222222222222
number of trials is
1800
number of Z or Y failures is
4
number of X failures is
0
average trial time
27.919268256315004
mu is
0.0025
number of trials is
2000
number of Z or Y failures is
5
number of X failures is
0
average trial time
31.200692033195054
stderr is
0.0011169148353275139
target is
0.00025
mu is
0.0022727272727272726
number of trials is
2200
number of Z or Y failures is
5
number of X failures is
0
average trial time
34.51348391317506
stderr is
0.0010154696992438247
target is
0.00022727272727272727
mu is
0.0020833333333333333
number of trials is
2400
number of Z or Y failures is
5
number of X failures is
0
average trial time
37.80694664231507
stderr is
0.0009309179304475019
target is
0.00020833333333333335
mu is
0.002307692307692308
number of trials is
2600
number of Z or Y failures is
6
number of X failures is
0
average trial time
41.114600779265054
stderr is
0.0009412047783273208
target is
0.0002307692307692308
mu is
0.002142857142857143
number of trials is
2800
number of Z or Y failures is
6
number of X failures is
0
average trial time
44.334163159935144
stderr is
0.0008740360496689584
target is
0.0002142857142857143
mu is
0.0023333333333333335
number of trials is
3000
number of Z or Y failures is
7
number of X failures is
0
average trial time
47.56110741533514
stderr is
0.0008810344508194935
target is
0.00023333333333333336
mu is
0.0021875
number of trials is
3200
number of Z or Y failures is
7
number of X failures is
0
average trial time
50.73945499822511
stderr is
0.0008260215560445914
target is
0.00021875000000000003
mu is
0.002058823529411765
number of trials is
3400
number of Z or Y failures is
7
number of X failures is
0
average trial time
53.98751993496513
stderr is
0.0007774750312825965
target is
0.0002058823529411765
mu is
0.0019444444444444444
number of trials is
3600
number of Z or Y failures is
7
number of X failures is
0
average trial time
57.1228096021152
stderr is
0.0007343180515976514
target is
0.00019444444444444446
mu is
0.0018421052631578947
number of trials is
3800
number of Z or Y failures is
7
number of X failures is
0
average trial time
60.31759914847021
stderr is
0.0006957003117421925
target is
0.00018421052631578948
mu is
0.00175
number of trials is
4000
number of Z or Y failures is
7
number of X failures is
0
average trial time
63.51503000083519
stderr is
0.0006609414390825213
target is
0.00017500000000000003
mu is
0.0019047619047619048
number of trials is
4200
number of Z or Y failures is
8
number of X failures is
0
average trial time
66.7020672523202
stderr is
0.0006728734660553085
target is
0.00019047619047619048
mu is
0.0018181818181818182
number of trials is
4400
number of Z or Y failures is
8
number of X failures is
0
average trial time
69.81144047962512
stderr is
0.0006423126891179413
target is
0.00018181818181818183
mu is
0.0017391304347826088
number of trials is
4600
number of Z or Y failures is
8
number of X failures is
0
average trial time
72.9893880363202
stderr is
0.0006144073419538518
target is
0.00017391304347826088
mu is
0.0016666666666666668
number of trials is
4800
number of Z or Y failures is
8
number of X failures is
0
average trial time
76.10464972975021
stderr is
0.0005888257390490302
target is
0.0001666666666666667
mu is
0.0016
number of trials is
5000
number of Z or Y failures is
8
number of X failures is
0
average trial time
79.2012352894452
stderr is
0.0005652892271944303
target is
0.00016
mu is
0.0017307692307692308
number of trials is
5200
number of Z or Y failures is
9
number of X failures is
0
average trial time
82.33121916198519
stderr is
0.0005764790336962937
target is
0.0001730769230769231
mu is
0.0016666666666666668
number of trials is
5400
number of Z or Y failures is
9
number of X failures is
0
average trial time
85.46681565014518
stderr is
0.000555143804114476
target is
0.0001666666666666667
mu is
0.0016071428571428571
number of trials is
5600
number of Z or Y failures is
9
number of X failures is
0
average trial time
88.57610402823036
stderr is
0.0005353314275015696
target is
0.00016071428571428573
mu is
0.0015517241379310344
number of trials is
5800
number of Z or Y failures is
9
number of X failures is
0
average trial time
91.73800078345047
stderr is
0.0005168844764703251
target is
0.00015517241379310346
mu is
0.0015
number of trials is
6000
number of Z or Y failures is
9
number of X failures is
0
average trial time
94.8629985336955
stderr is
0.00049966649987952
target is
0.00015000000000000001
mu is
0.0016129032258064516
number of trials is
6200
number of Z or Y failures is
10
number of X failures is
0
average trial time
97.93868494858049
stderr is
0.0005096743958995387
target is
0.00016129032258064516
mu is
0.0015625
number of trials is
6400
number of Z or Y failures is
10
number of X failures is
0
average trial time
100.99032253883044
stderr is
0.0004937582896453793
target is
0.00015625000000000003
mu is
0.0015151515151515152
number of trials is
6600
number of Z or Y failures is
10
number of X failures is
0
average trial time
104.00201754219046
stderr is
0.0004788061362537102
target is
0.00015151515151515152
mu is
0.0014705882352941176
number of trials is
6800
number of Z or Y failures is
10
number of X failures is
0
average trial time
107.15166021593546
stderr is
0.00046473293757870205
target is
0.00014705882352941178
mu is
0.0015714285714285715
number of trials is
7000
number of Z or Y failures is
11
number of X failures is
0
average trial time
110.2875350708354
stderr is
0.00047346494103483794
target is
0.00015714285714285716
mu is
0.0015277777777777779
number of trials is
7200
number of Z or Y failures is
11
number of X failures is
0
average trial time
113.28655671447045
stderr is
0.0004603222858688811
target is
0.0001527777777777778
mu is
0.0014864864864864865
number of trials is
7400
number of Z or Y failures is
11
number of X failures is
0
average trial time
116.30399878134551
stderr is
0.0004478895631063048
target is
0.00014864864864864866
The SVD algorithm `"divide_and_conquer"` has thrown an error,
likely because of a convergance failure. You can try
other SVD algorithms that may converge better using the
`alg` (or `svd_alg` if called through `factorize` or MPS/MPO functionality) keyword argument:

 - "divide_and_conquer" is a divide-and-conquer algorithm
   (LAPACK's `gesdd`). It is fast, but may lead to some innacurate
   singular values for very ill-conditioned matrices.
   It also may sometimes fail to converge, leading to errors
   (in which case `"qr_iteration"` or `"recursive"` can be tried).

 - `"qr_iteration"` (LAPACK's `gesvd`) is typically slower 
   than "divide_and_conquer", especially for large matrices,
   but is more accurate for very ill-conditioned matrices 
   compared to `"divide_and_conquer"`.

 - `"recursive"` is ITensor's custom SVD algorithm. It is very
   reliable, but may be slow if high precision is needed.
   To get an `svd` of a matrix `A`, an eigendecomposition of
   ``A^{\dagger} A`` is used to compute `U` and then a `qr` of
   ``A^{\dagger} U`` is used to compute `V`. This is performed
   recursively to compute small singular values.

Returning `nothing`. For an output `F = svd(A, ...)` you can check if
`isnothing(F)` in your code and try a different algorithm.

To suppress this message in the future, you can wrap the `svd` call in the
`@suppress` macro from the `Suppressor` package.

