ERROR: LoadError: MethodError: no method matching iterate(::Nothing)
Closest candidates are:
  iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:664
  iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:664
  iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s79", var"#s78"} where {var"#s79", var"#s78"<:Dict}, Base.ValueIterator{var"#s77"} where var"#s77"<:Dict} at dict.jl:693
  ...
Stacktrace:
  [1] indexed_iterate(I::Nothing, i::Int64)
    @ Base ./tuple.jl:89
  [2] MPS(A::ITensor{4}, sites::Vector{IndexSet{1, Index{Int64}, Tuple{Index{Int64}}}}; leftinds::Index{Int64}, orthocenter::Int64, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:ortho, :cutoff, :maxdim, :svd_alg), Tuple{String, Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1388
  [3] setindex!(ψ::MPS, A::ITensor{4}, r::UnitRange{Int64}; orthocenter::Int64, perm::Vector{Int64}, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:ortho, :cutoff, :maxdim, :svd_alg), Tuple{String, Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1328
  [4] setindex!(::MPS, ::ITensor{4}, ::UnitRange{Int64}, ::Pair{Symbol, Any}, ::Vararg{Pair{Symbol, Any}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:orthocenter, :perm), Tuple{Int64, Vector{Int64}}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1340
  [5] swapbondsites(ψ::MPS, b::Int64; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:ortho, :cutoff, :maxdim, :svd_alg), Tuple{String, Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1419
  [6] movesite(ψ::MPS, n1n2::Pair{Int64, Int64}; orthocenter::Int64, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1447
  [7] _movesites(ψ::MPS, ns::Vector{Int64}, ns′::Vector{Int64}; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1474
  [8] movesites(ψ::MPS, nsns′::Vector{Pair{Int64, Int64}}; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1495
  [9] product(o::ITensor{4}, ψ::MPS, ns::Vector{Int64}; move_sites_back::Bool, apply_dag::Bool, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1548
 [10] product(As::Vector{ITensor}, ψ::MPS; move_sites_back::Bool, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1650
 [11] runcircuit(M::MPS, circuit_tensors::Vector{ITensor}; apply_dag::Nothing, cutoff::Float64, maxdim::Int64, svd_alg::String, move_sites_back::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ PastaQ ~/.julia/packages/PastaQ/9VxGO/src/circuits/runcircuit.jl:86
 [12] #runcircuit#99
    @ ~/.julia/packages/PastaQ/9VxGO/src/circuits/runcircuit.jl:188 [inlined]
 [13] SurfCirc(dz::Int64, dx::Int64, nr::Int64, PEZ::Matrix{Int64}, PEX::Matrix{Int64}, Synz::Matrix{Int64}, Synx::Matrix{Int64}, zsch::Vector{Any}, xsch::Vector{Any}, bsch::Array{Int64, 3}, layout::Vector{Any}, ql::Matrix{Int64}, zl::Vector{Int64}, xl::Vector{Int64}, p::Float64, al2::Int64, tmeas::Float64, k2::Float64, nth::Int64, pmz::Float64, pmx::Float64, acc::Float64, bd::Int64)
    @ Main /shared/JuliaCLTNDecoder/experiment/d9/4e5/mlsurfnc.jl:1337
 [14] macro expansion
    @ /shared/JuliaCLTNDecoder/experiment/d9/4e5/mlsurfnc.jl:1432 [inlined]
 [15] macro expansion
    @ ./timing.jl:287 [inlined]
 [16] SurfMC(dz::Int64, dx::Int64, nr::Int64, p::Float64, al2::Int64, tmeas::Float64, k2::Float64, nth::Int64, acc::Float64, bd::Int64, err::Float64, nt::Int64; sim_id::Int64)
    @ Main /shared/JuliaCLTNDecoder/experiment/d9/4e5/mlsurfnc.jl:1431
 [17] top-level scope
    @ /shared/JuliaCLTNDecoder/experiment/d9/4e5/mlsurfnc.jl:1514
in expression starting at /shared/JuliaCLTNDecoder/experiment/d9/4e5/mlsurfnc.jl:1512
mu is
0.005
number of trials is
200
number of Z or Y failures is
1
number of X failures is
0
average trial time
2.9152016745250005
mu is
0.0025
number of trials is
400
number of Z or Y failures is
1
number of X failures is
0
average trial time
5.692171633895
mu is
0.0016666666666666668
number of trials is
600
number of Z or Y failures is
1
number of X failures is
0
average trial time
8.524497567825005
mu is
0.0025
number of trials is
800
number of Z or Y failures is
2
number of X failures is
0
average trial time
11.651357286515006
mu is
0.002
number of trials is
1000
number of Z or Y failures is
2
number of X failures is
0
average trial time
14.887455195300006
mu is
0.0025
number of trials is
1200
number of Z or Y failures is
3
number of X failures is
0
average trial time
18.25899806993001
mu is
0.002142857142857143
number of trials is
1400
number of Z or Y failures is
3
number of X failures is
0
average trial time
21.55977354338502
mu is
0.001875
number of trials is
1600
number of Z or Y failures is
3
number of X failures is
0
average trial time
24.89420873692002
mu is
0.0022222222222222222
number of trials is
1800
number of Z or Y failures is
4
number of X failures is
0
average trial time
28.288074531299998
mu is
0.002
number of trials is
2000
number of Z or Y failures is
4
number of X failures is
0
average trial time
31.615456587569998
mu is
0.0018181818181818182
number of trials is
2200
number of Z or Y failures is
4
number of X failures is
0
average trial time
34.91686653965999
mu is
0.0020833333333333333
number of trials is
2400
number of Z or Y failures is
5
number of X failures is
0
average trial time
38.24802142353496
stderr is
0.0009309179304475019
target is
0.00020833333333333335
mu is
0.0019230769230769232
number of trials is
2600
number of Z or Y failures is
5
number of X failures is
0
average trial time
41.480063880974946
stderr is
0.0008593640772379081
target is
0.00019230769230769233
mu is
0.0017857142857142857
number of trials is
2800
number of Z or Y failures is
5
number of X failures is
0
average trial time
44.72169925389494
stderr is
0.0007980248729344898
target is
0.00017857142857142857
mu is
0.0016666666666666668
number of trials is
3000
number of Z or Y failures is
5
number of X failures is
0
average trial time
47.95981774166496
stderr is
0.0007448587569592657
target is
0.0001666666666666667
mu is
0.0015625
number of trials is
3200
number of Z or Y failures is
5
number of X failures is
0
average trial time
51.16701063625988
stderr is
0.0006983342377708639
target is
0.00015625000000000003
mu is
0.0014705882352941176
number of trials is
3400
number of Z or Y failures is
5
number of X failures is
0
average trial time
54.372994664579934
stderr is
0.0006572799615000046
target is
0.00014705882352941178
mu is
0.001388888888888889
number of trials is
3600
number of Z or Y failures is
5
number of X failures is
0
average trial time
57.57733474207502
stderr is
0.0006207847296911626
target is
0.0001388888888888889
mu is
0.0013157894736842105
number of trials is
3800
number of Z or Y failures is
5
number of X failures is
0
average trial time
60.74201810295
stderr is
0.0005881290736314881
target is
0.00013157894736842105
mu is
0.0015
number of trials is
4000
number of Z or Y failures is
6
number of X failures is
0
average trial time
63.89801442918996
stderr is
0.0006119894874776819
target is
0.00015000000000000001
mu is
0.0016666666666666668
number of trials is
4200
number of Z or Y failures is
7
number of X failures is
0
average trial time
67.02500732193997
stderr is
0.0006294905625937463
target is
0.0001666666666666667
mu is
0.001590909090909091
number of trials is
4400
number of Z or Y failures is
7
number of X failures is
0
average trial time
70.19815405461996
stderr is
0.0006008969009018305
target is
0.0001590909090909091
mu is
0.0017391304347826088
number of trials is
4600
number of Z or Y failures is
8
number of X failures is
0
average trial time
73.33551468176998
stderr is
0.0006144073419538518
target is
0.00017391304347826088
mu is
0.001875
number of trials is
4800
number of Z or Y failures is
9
number of X failures is
0
average trial time
76.39718113348498
stderr is
0.0006244788408516256
target is
0.0001875
mu is
0.0018
number of trials is
5000
number of Z or Y failures is
9
number of X failures is
0
average trial time
79.57018162179499
stderr is
0.0005995197117501269
target is
0.00018
mu is
0.0017307692307692308
number of trials is
5200
number of Z or Y failures is
9
number of X failures is
0
average trial time
82.640858143715
stderr is
0.0005764790336962937
target is
0.0001730769230769231
mu is
0.001851851851851852
number of trials is
5400
number of Z or Y failures is
10
number of X failures is
0
average trial time
85.69140007619504
stderr is
0.0005851186743245129
target is
0.0001851851851851852
mu is
0.0017857142857142857
number of trials is
5600
number of Z or Y failures is
10
number of X failures is
0
average trial time
88.7888153370501
stderr is
0.0005642384050302092
target is
0.00017857142857142857
mu is
0.0017241379310344827
number of trials is
5800
number of Z or Y failures is
10
number of X failures is
0
average trial time
91.91537678753996
stderr is
0.0005447970332652376
target is
0.0001724137931034483
mu is
0.0016666666666666668
number of trials is
6000
number of Z or Y failures is
10
number of X failures is
0
average trial time
94.95951760335494
stderr is
0.0005266507777029201
target is
0.0001666666666666667
mu is
0.0016129032258064516
number of trials is
6200
number of Z or Y failures is
10
number of X failures is
0
average trial time
98.10414945632505
stderr is
0.0005096743958995387
target is
0.00016129032258064516
mu is
0.0015625
number of trials is
6400
number of Z or Y failures is
10
number of X failures is
0
average trial time
101.1998616202351
stderr is
0.0004937582896453793
target is
0.00015625000000000003
mu is
0.0015151515151515152
number of trials is
6600
number of Z or Y failures is
10
number of X failures is
0
average trial time
104.30274347789988
stderr is
0.0004788061362537102
target is
0.00015151515151515152
mu is
0.0014705882352941176
number of trials is
6800
number of Z or Y failures is
10
number of X failures is
0
average trial time
107.38847495330491
stderr is
0.00046473293757870205
target is
0.00014705882352941178
mu is
0.0014285714285714286
number of trials is
7000
number of Z or Y failures is
10
number of X failures is
0
average trial time
110.43265192777986
stderr is
0.0004514634032707081
target is
0.00014285714285714287
mu is
0.001388888888888889
number of trials is
7200
number of Z or Y failures is
10
number of X failures is
0
average trial time
113.54529853044987
stderr is
0.0004389306033192965
target is
0.0001388888888888889
mu is
0.0013513513513513514
number of trials is
7400
number of Z or Y failures is
10
number of X failures is
0
average trial time
116.65983931817493
stderr is
0.0004270748389689514
target is
0.00013513513513513514
mu is
0.0014473684210526317
number of trials is
7600
number of Z or Y failures is
11
number of X failures is
0
average trial time
119.77523776965498
stderr is
0.00043611076247347934
target is
0.00014473684210526317
mu is
0.0014102564102564104
number of trials is
7800
number of Z or Y failures is
11
number of X failures is
0
average trial time
122.78726079401
stderr is
0.00042493561463885775
target is
0.00014102564102564104
mu is
0.001375
number of trials is
8000
number of Z or Y failures is
11
number of X failures is
0
average trial time
125.774906067365
stderr is
0.0004143188740465173
target is
0.0001375
mu is
0.0013414634146341464
number of trials is
8200
number of Z or Y failures is
11
number of X failures is
0
average trial time
128.75513479086484
stderr is
0.00040421970663642953
target is
0.00013414634146341464
mu is
0.0013095238095238095
number of trials is
8400
number of Z or Y failures is
11
number of X failures is
0
average trial time
131.74550659602983
stderr is
0.00039460116498082806
target is
0.00013095238095238096
mu is
0.0013953488372093023
number of trials is
8600
number of Z or Y failures is
12
number of X failures is
0
average trial time
134.78055098608485
stderr is
0.00040254479472585323
target is
0.00013953488372093025
mu is
0.0013636363636363637
number of trials is
8800
number of Z or Y failures is
12
number of X failures is
0
average trial time
137.79103105314488
stderr is
0.0003934017759557849
target is
0.00013636363636363637
mu is
0.0013333333333333333
number of trials is
9000
number of Z or Y failures is
12
number of X failures is
0
average trial time
140.8714048010797
stderr is
0.0003846648646135756
target is
0.00013333333333333334
mu is
0.0013043478260869566
number of trials is
9200
number of Z or Y failures is
12
number of X failures is
0
average trial time
143.8623617439397
stderr is
0.0003763075913223502
target is
0.00013043478260869567
mu is
0.001276595744680851
number of trials is
9400
number of Z or Y failures is
12
number of X failures is
0
average trial time
147.01419346016482
stderr is
0.0003683057380940499
target is
0.0001276595744680851
mu is
0.00125
number of trials is
9600
number of Z or Y failures is
12
number of X failures is
0
average trial time
150.08831076022977
stderr is
0.0003606371039448713
target is
0.000125
mu is
0.001326530612244898
number of trials is
9800
number of Z or Y failures is
13
number of X failures is
0
average trial time
153.13008503773474
stderr is
0.00036768805035752725
target is
0.0001326530612244898
mu is
0.0013
number of trials is
10000
number of Z or Y failures is
13
number of X failures is
0
average trial time
156.17967378836482
stderr is
0.0003603387078825141
target is
0.00013
mu is
0.0012745098039215687
number of trials is
10200
number of Z or Y failures is
13
number of X failures is
0
average trial time
159.26615163333483
stderr is
0.000353277404971429
target is
0.00012745098039215687
mu is
0.00125
number of trials is
10400
number of Z or Y failures is
13
number of X failures is
0
average trial time
162.31456342531487
stderr is
0.0003464875335767902
target is
0.000125
mu is
0.0012264150943396227
number of trials is
10600
number of Z or Y failures is
13
number of X failures is
0
average trial time
165.29503818829977
stderr is
0.0003399537383760784
target is
0.00012264150943396227
mu is
0.0012037037037037038
number of trials is
10800
number of Z or Y failures is
13
number of X failures is
0
average trial time
168.32995537165985
stderr is
0.0003336618008434666
target is
0.00012037037037037039
mu is
0.0011818181818181819
number of trials is
11000
number of Z or Y failures is
13
number of X failures is
0
average trial time
171.40804641064972
stderr is
0.00032759853596132926
target is
0.0001181818181818182
mu is
0.00125
number of trials is
11200
number of Z or Y failures is
14
number of X failures is
0
average trial time
174.44032130989478
stderr is
0.00033388259506086714
target is
0.000125
mu is
0.0013157894736842105
number of trials is
11400
number of Z or Y failures is
15
number of X failures is
0
average trial time
177.4476630896447
stderr is
0.0003395266894035958
target is
0.00013157894736842105
mu is
0.001379310344827586
number of trials is
11600
number of Z or Y failures is
16
number of X failures is
0
average trial time
180.4333300548196
stderr is
0.0003446045459820512
target is
0.00013793103448275863
mu is
0.0013559322033898306
number of trials is
11800
number of Z or Y failures is
16
number of X failures is
0
average trial time
183.4260470860796
stderr is
0.0003387675087319102
target is
0.00013559322033898308
The SVD algorithm `"divide_and_conquer"` has thrown an error,
likely because of a convergance failure. You can try
other SVD algorithms that may converge better using the
`alg` (or `svd_alg` if called through `factorize` or MPS/MPO functionality) keyword argument:

 - "divide_and_conquer" is a divide-and-conquer algorithm
   (LAPACK's `gesdd`). It is fast, but may lead to some innacurate
   singular values for very ill-conditioned matrices.
   It also may sometimes fail to converge, leading to errors
   (in which case `"qr_iteration"` or `"recursive"` can be tried).

 - `"qr_iteration"` (LAPACK's `gesvd`) is typically slower 
   than "divide_and_conquer", especially for large matrices,
   but is more accurate for very ill-conditioned matrices 
   compared to `"divide_and_conquer"`.

 - `"recursive"` is ITensor's custom SVD algorithm. It is very
   reliable, but may be slow if high precision is needed.
   To get an `svd` of a matrix `A`, an eigendecomposition of
   ``A^{\dagger} A`` is used to compute `U` and then a `qr` of
   ``A^{\dagger} U`` is used to compute `V`. This is performed
   recursively to compute small singular values.

Returning `nothing`. For an output `F = svd(A, ...)` you can check if
`isnothing(F)` in your code and try a different algorithm.

To suppress this message in the future, you can wrap the `svd` call in the
`@suppress` macro from the `Suppressor` package.

