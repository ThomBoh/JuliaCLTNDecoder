ERROR: LoadError: MethodError: no method matching iterate(::Nothing)
Closest candidates are:
  iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:664
  iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:664
  iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s79", var"#s78"} where {var"#s79", var"#s78"<:Dict}, Base.ValueIterator{var"#s77"} where var"#s77"<:Dict} at dict.jl:693
  ...
Stacktrace:
  [1] indexed_iterate(I::Nothing, i::Int64)
    @ Base ./tuple.jl:89
  [2] MPS(A::ITensor{4}, sites::Vector{IndexSet{1, Index{Int64}, Tuple{Index{Int64}}}}; leftinds::Index{Int64}, orthocenter::Int64, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1388
  [3] setindex!(ψ::MPS, A::ITensor{4}, r::UnitRange{Int64}; orthocenter::Int64, perm::Nothing, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1328
  [4] setindex!(::MPS, ::ITensor{4}, ::UnitRange{Int64}, ::Pair{Symbol, Any}, ::Vararg{Pair{Symbol, Any}, N} where N; kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1340
  [5] setindex!(::MPS, ::ITensor{4}, ::UnitRange{Int64}, ::Pair{Symbol, Any}, ::Pair{Symbol, Any}, ::Pair{Symbol, Any})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1340
  [6] product(o::ITensor{4}, ψ::MPS, ns::Vector{Int64}; move_sites_back::Bool, apply_dag::Bool, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1555
  [7] product(As::Vector{ITensor}, ψ::MPS; move_sites_back::Bool, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1650
  [8] runcircuit(M::MPS, circuit_tensors::Vector{ITensor}; apply_dag::Nothing, cutoff::Float64, maxdim::Int64, svd_alg::String, move_sites_back::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ PastaQ ~/.julia/packages/PastaQ/9VxGO/src/circuits/runcircuit.jl:86
  [9] #runcircuit#99
    @ ~/.julia/packages/PastaQ/9VxGO/src/circuits/runcircuit.jl:188 [inlined]
 [10] SurfCirc(dz::Int64, dx::Int64, nr::Int64, PEZ::Matrix{Int64}, PEX::Matrix{Int64}, Synz::Matrix{Int64}, Synx::Matrix{Int64}, zsch::Vector{Any}, xsch::Vector{Any}, bsch::Array{Int64, 3}, layout::Vector{Any}, ql::Matrix{Int64}, zl::Vector{Int64}, xl::Vector{Int64}, p::Float64, al2::Int64, tmeas::Float64, k2::Float64, nth::Int64, pmz::Float64, pmx::Float64, acc::Float64, bd::Int64)
    @ Main /shared/MLSurface/JuliaCLTNDecoder/experiment/d7/2e5/supp/suppagain/more/more/mlsurfnc.jl:1337
 [11] macro expansion
    @ /shared/MLSurface/JuliaCLTNDecoder/experiment/d7/2e5/supp/suppagain/more/more/mlsurfnc.jl:1432 [inlined]
 [12] macro expansion
    @ ./timing.jl:287 [inlined]
 [13] SurfMC(dz::Int64, dx::Int64, nr::Int64, p::Float64, al2::Int64, tmeas::Float64, k2::Float64, nth::Int64, acc::Float64, bd::Int64, err::Float64, nt::Int64; sim_id::Int64)
    @ Main /shared/MLSurface/JuliaCLTNDecoder/experiment/d7/2e5/supp/suppagain/more/more/mlsurfnc.jl:1431
 [14] top-level scope
    @ /shared/MLSurface/JuliaCLTNDecoder/experiment/d7/2e5/supp/suppagain/more/more/mlsurfnc.jl:1514
in expression starting at /shared/MLSurface/JuliaCLTNDecoder/experiment/d7/2e5/supp/suppagain/more/more/mlsurfnc.jl:1512
mu is
0.0
number of trials is
200
number of Z or Y failures is
0
number of X failures is
0
average trial time
1.495788995885001
mu is
0.0
number of trials is
400
number of Z or Y failures is
0
number of X failures is
0
average trial time
2.8413799157750015
mu is
0.0
number of trials is
600
number of Z or Y failures is
0
number of X failures is
0
average trial time
4.170067459930001
mu is
0.0
number of trials is
800
number of Z or Y failures is
0
number of X failures is
0
average trial time
5.486121227805
mu is
0.0
number of trials is
1000
number of Z or Y failures is
0
number of X failures is
0
average trial time
6.816934203500001
mu is
0.0
number of trials is
1200
number of Z or Y failures is
0
number of X failures is
0
average trial time
8.132803939710003
mu is
0.0
number of trials is
1400
number of Z or Y failures is
0
number of X failures is
0
average trial time
9.475189284685001
mu is
0.0
number of trials is
1600
number of Z or Y failures is
0
number of X failures is
0
average trial time
10.850638594810011
mu is
0.0005555555555555556
number of trials is
1800
number of Z or Y failures is
1
number of X failures is
0
average trial time
12.228486199889998
mu is
0.0005
number of trials is
2000
number of Z or Y failures is
1
number of X failures is
0
average trial time
13.625740919150013
mu is
0.00045454545454545455
number of trials is
2200
number of Z or Y failures is
1
number of X failures is
0
average trial time
15.0332318018
mu is
0.0004166666666666667
number of trials is
2400
number of Z or Y failures is
1
number of X failures is
0
average trial time
16.490281745490005
mu is
0.0003846153846153846
number of trials is
2600
number of Z or Y failures is
1
number of X failures is
0
average trial time
17.944260263460013
mu is
0.00035714285714285714
number of trials is
2800
number of Z or Y failures is
1
number of X failures is
0
average trial time
19.402128110575013
mu is
0.0003333333333333333
number of trials is
3000
number of Z or Y failures is
1
number of X failures is
0
average trial time
20.878853074545024
mu is
0.0003125
number of trials is
3200
number of Z or Y failures is
1
number of X failures is
0
average trial time
22.39304700689503
mu is
0.0002941176470588235
number of trials is
3400
number of Z or Y failures is
1
number of X failures is
0
average trial time
23.898634954855023
mu is
0.0002777777777777778
number of trials is
3600
number of Z or Y failures is
1
number of X failures is
0
average trial time
25.477110831115024
mu is
0.0002631578947368421
number of trials is
3800
number of Z or Y failures is
1
number of X failures is
0
average trial time
27.005434669730015
mu is
0.00025
number of trials is
4000
number of Z or Y failures is
1
number of X failures is
0
average trial time
28.589454610920008
mu is
0.0002380952380952381
number of trials is
4200
number of Z or Y failures is
1
number of X failures is
0
average trial time
30.181383251875026
mu is
0.00022727272727272727
number of trials is
4400
number of Z or Y failures is
1
number of X failures is
0
average trial time
31.748902763600007
mu is
0.0004347826086956522
number of trials is
4600
number of Z or Y failures is
2
number of X failures is
0
average trial time
33.34142058375503
mu is
0.0004166666666666667
number of trials is
4800
number of Z or Y failures is
2
number of X failures is
0
average trial time
34.94889601348003
mu is
0.0004
number of trials is
5000
number of Z or Y failures is
2
number of X failures is
0
average trial time
36.583574603230026
mu is
0.000576923076923077
number of trials is
5200
number of Z or Y failures is
3
number of X failures is
0
average trial time
38.21524651286506
mu is
0.0005555555555555556
number of trials is
5400
number of Z or Y failures is
3
number of X failures is
0
average trial time
39.82039177042006
mu is
0.0005357142857142857
number of trials is
5600
number of Z or Y failures is
3
number of X failures is
0
average trial time
41.43719965090503
mu is
0.000689655172413793
number of trials is
5800
number of Z or Y failures is
4
number of X failures is
0
average trial time
43.060032571215025
mu is
0.0006666666666666666
number of trials is
6000
number of Z or Y failures is
4
number of X failures is
0
average trial time
44.67738364870012
mu is
0.0006451612903225806
number of trials is
6200
number of Z or Y failures is
4
number of X failures is
0
average trial time
46.29523840572513
mu is
0.000625
number of trials is
6400
number of Z or Y failures is
4
number of X failures is
0
average trial time
47.94379239390511
mu is
0.0006060606060606061
number of trials is
6600
number of Z or Y failures is
4
number of X failures is
0
average trial time
49.55433119680014
mu is
0.000588235294117647
number of trials is
6800
number of Z or Y failures is
4
number of X failures is
0
average trial time
51.18029265742519
mu is
0.0005714285714285715
number of trials is
7000
number of Z or Y failures is
4
number of X failures is
0
average trial time
52.79965319242524
The SVD algorithm `"divide_and_conquer"` has thrown an error,
likely because of a convergance failure. You can try
other SVD algorithms that may converge better using the
`alg` (or `svd_alg` if called through `factorize` or MPS/MPO functionality) keyword argument:

 - "divide_and_conquer" is a divide-and-conquer algorithm
   (LAPACK's `gesdd`). It is fast, but may lead to some innacurate
   singular values for very ill-conditioned matrices.
   It also may sometimes fail to converge, leading to errors
   (in which case `"qr_iteration"` or `"recursive"` can be tried).

 - `"qr_iteration"` (LAPACK's `gesvd`) is typically slower 
   than "divide_and_conquer", especially for large matrices,
   but is more accurate for very ill-conditioned matrices 
   compared to `"divide_and_conquer"`.

 - `"recursive"` is ITensor's custom SVD algorithm. It is very
   reliable, but may be slow if high precision is needed.
   To get an `svd` of a matrix `A`, an eigendecomposition of
   ``A^{\dagger} A`` is used to compute `U` and then a `qr` of
   ``A^{\dagger} U`` is used to compute `V`. This is performed
   recursively to compute small singular values.

Returning `nothing`. For an output `F = svd(A, ...)` you can check if
`isnothing(F)` in your code and try a different algorithm.

To suppress this message in the future, you can wrap the `svd` call in the
`@suppress` macro from the `Suppressor` package.

