ERROR: LoadError: MethodError: no method matching iterate(::Nothing)
Closest candidates are:
  iterate(!Matched::Union{LinRange, StepRangeLen}) at range.jl:664
  iterate(!Matched::Union{LinRange, StepRangeLen}, !Matched::Int64) at range.jl:664
  iterate(!Matched::T) where T<:Union{Base.KeySet{var"#s79", var"#s78"} where {var"#s79", var"#s78"<:Dict}, Base.ValueIterator{var"#s77"} where var"#s77"<:Dict} at dict.jl:693
  ...
Stacktrace:
  [1] indexed_iterate(I::Nothing, i::Int64)
    @ Base ./tuple.jl:89
  [2] MPS(A::ITensor{4}, sites::Vector{IndexSet{1, Index{Int64}, Tuple{Index{Int64}}}}; leftinds::Index{Int64}, orthocenter::Int64, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:ortho, :cutoff, :maxdim, :svd_alg), Tuple{String, Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1388
  [3] setindex!(ψ::MPS, A::ITensor{4}, r::UnitRange{Int64}; orthocenter::Int64, perm::Vector{Int64}, kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:ortho, :cutoff, :maxdim, :svd_alg), Tuple{String, Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1328
  [4] setindex!(::MPS, ::ITensor{4}, ::UnitRange{Int64}, ::Pair{Symbol, Any}, ::Vararg{Pair{Symbol, Any}, N} where N; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol}, NamedTuple{(:orthocenter, :perm), Tuple{Int64, Vector{Int64}}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1340
  [5] swapbondsites(ψ::MPS, b::Int64; kwargs::Base.Iterators.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:ortho, :cutoff, :maxdim, :svd_alg), Tuple{String, Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1419
  [6] movesite(ψ::MPS, n1n2::Pair{Int64, Int64}; orthocenter::Int64, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1447
  [7] _movesites(ψ::MPS, ns::Vector{Int64}, ns′::Vector{Int64}; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1474
  [8] movesites(ψ::MPS, nsns′::Vector{Pair{Int64, Int64}}; kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1495
  [9] product(o::ITensor{4}, ψ::MPS, ns::Vector{Int64}; move_sites_back::Bool, apply_dag::Bool, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1548
 [10] product(As::Vector{ITensor}, ψ::MPS; move_sites_back::Bool, kwargs::Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol}, NamedTuple{(:cutoff, :maxdim, :svd_alg), Tuple{Float64, Int64, String}}})
    @ ITensors ~/.julia/packages/ITensors/Ligbx/src/mps/abstractmps.jl:1650
 [11] runcircuit(M::MPS, circuit_tensors::Vector{ITensor}; apply_dag::Nothing, cutoff::Float64, maxdim::Int64, svd_alg::String, move_sites_back::Bool, kwargs::Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}})
    @ PastaQ ~/.julia/packages/PastaQ/9VxGO/src/circuits/runcircuit.jl:86
 [12] #runcircuit#99
    @ ~/.julia/packages/PastaQ/9VxGO/src/circuits/runcircuit.jl:188 [inlined]
 [13] SurfCirc(dz::Int64, dx::Int64, nr::Int64, PEZ::Matrix{Int64}, PEX::Matrix{Int64}, Synz::Matrix{Int64}, Synx::Matrix{Int64}, zsch::Vector{Any}, xsch::Vector{Any}, bsch::Array{Int64, 3}, layout::Vector{Any}, ql::Matrix{Int64}, zl::Vector{Int64}, xl::Vector{Int64}, p::Float64, al2::Int64, tmeas::Float64, k2::Float64, nth::Int64, pmz::Float64, pmx::Float64, acc::Float64, bd::Int64)
    @ Main /shared/MLSurface/JuliaCLTNDecoder/experiment/d9/1e5/more/mlsurfnc.jl:1337
 [14] macro expansion
    @ /shared/MLSurface/JuliaCLTNDecoder/experiment/d9/1e5/more/mlsurfnc.jl:1432 [inlined]
 [15] macro expansion
    @ ./timing.jl:287 [inlined]
 [16] SurfMC(dz::Int64, dx::Int64, nr::Int64, p::Float64, al2::Int64, tmeas::Float64, k2::Float64, nth::Int64, acc::Float64, bd::Int64, err::Float64, nt::Int64; sim_id::Int64)
    @ Main /shared/MLSurface/JuliaCLTNDecoder/experiment/d9/1e5/more/mlsurfnc.jl:1431
 [17] top-level scope
    @ /shared/MLSurface/JuliaCLTNDecoder/experiment/d9/1e5/more/mlsurfnc.jl:1514
in expression starting at /shared/MLSurface/JuliaCLTNDecoder/experiment/d9/1e5/more/mlsurfnc.jl:1512
mu is
0.0
number of trials is
200
number of Z or Y failures is
0
number of X failures is
0
average trial time
2.2356813900500003
mu is
0.0
number of trials is
400
number of Z or Y failures is
0
number of X failures is
0
average trial time
4.291720329210006
mu is
0.0
number of trials is
600
number of Z or Y failures is
0
number of X failures is
0
average trial time
6.339884048125006
mu is
0.0
number of trials is
800
number of Z or Y failures is
0
number of X failures is
0
average trial time
8.392000244085006
mu is
0.0
number of trials is
1000
number of Z or Y failures is
0
number of X failures is
0
average trial time
10.442689769895008
mu is
0.0
number of trials is
1200
number of Z or Y failures is
0
number of X failures is
0
average trial time
12.505251049885018
mu is
0.0
number of trials is
1400
number of Z or Y failures is
0
number of X failures is
0
average trial time
14.573302853220016
mu is
0.0
number of trials is
1600
number of Z or Y failures is
0
number of X failures is
0
average trial time
16.63472918640002
mu is
0.0
number of trials is
1800
number of Z or Y failures is
0
number of X failures is
0
average trial time
18.72320975948502
mu is
0.0
number of trials is
2000
number of Z or Y failures is
0
number of X failures is
0
average trial time
20.810968728485022
mu is
0.0
number of trials is
2200
number of Z or Y failures is
0
number of X failures is
0
average trial time
22.932326546680017
mu is
0.0
number of trials is
2400
number of Z or Y failures is
0
number of X failures is
0
average trial time
25.053312363305004
mu is
0.0
number of trials is
2600
number of Z or Y failures is
0
number of X failures is
0
average trial time
27.229255904269998
mu is
0.0
number of trials is
2800
number of Z or Y failures is
0
number of X failures is
0
average trial time
29.391311915130014
mu is
0.0
number of trials is
3000
number of Z or Y failures is
0
number of X failures is
0
average trial time
31.612729744650004
mu is
0.0
number of trials is
3200
number of Z or Y failures is
0
number of X failures is
0
average trial time
33.84340974230503
mu is
0.0
number of trials is
3400
number of Z or Y failures is
0
number of X failures is
0
average trial time
36.1008838784
mu is
0.0
number of trials is
3600
number of Z or Y failures is
0
number of X failures is
0
average trial time
38.3966412012
mu is
0.0
number of trials is
3800
number of Z or Y failures is
0
number of X failures is
0
average trial time
40.69713210747998
mu is
0.0
number of trials is
4000
number of Z or Y failures is
0
number of X failures is
0
average trial time
43.02066047872999
mu is
0.0
number of trials is
4200
number of Z or Y failures is
0
number of X failures is
0
average trial time
45.327379006634985
mu is
0.0
number of trials is
4400
number of Z or Y failures is
0
number of X failures is
0
average trial time
47.65691464443996
mu is
0.0
number of trials is
4600
number of Z or Y failures is
0
number of X failures is
0
average trial time
50.05196014872501
mu is
0.0
number of trials is
4800
number of Z or Y failures is
0
number of X failures is
0
average trial time
52.41372195622508
mu is
0.0
number of trials is
5000
number of Z or Y failures is
0
number of X failures is
0
average trial time
54.80736360197009
mu is
0.0
number of trials is
5200
number of Z or Y failures is
0
number of X failures is
0
average trial time
57.23030559608504
mu is
0.0
number of trials is
5400
number of Z or Y failures is
0
number of X failures is
0
average trial time
59.63170809283004
mu is
0.0
number of trials is
5600
number of Z or Y failures is
0
number of X failures is
0
average trial time
62.080656976435066
mu is
0.0
number of trials is
5800
number of Z or Y failures is
0
number of X failures is
0
average trial time
64.53342496552006
mu is
0.0
number of trials is
6000
number of Z or Y failures is
0
number of X failures is
0
average trial time
66.95044760928002
mu is
0.0
number of trials is
6200
number of Z or Y failures is
0
number of X failures is
0
average trial time
69.39835717535001
mu is
0.0
number of trials is
6400
number of Z or Y failures is
0
number of X failures is
0
average trial time
71.85601264019002
mu is
0.0
number of trials is
6600
number of Z or Y failures is
0
number of X failures is
0
average trial time
74.27782046444007
mu is
0.0
number of trials is
6800
number of Z or Y failures is
0
number of X failures is
0
average trial time
76.74771068887507
mu is
0.0
number of trials is
7000
number of Z or Y failures is
0
number of X failures is
0
average trial time
79.20109198244505
mu is
0.0
number of trials is
7200
number of Z or Y failures is
0
number of X failures is
0
average trial time
81.6366147253751
mu is
0.0
number of trials is
7400
number of Z or Y failures is
0
number of X failures is
0
average trial time
84.09822281436519
mu is
0.0
number of trials is
7600
number of Z or Y failures is
0
number of X failures is
0
average trial time
86.55894394081511
mu is
0.0
number of trials is
7800
number of Z or Y failures is
0
number of X failures is
0
average trial time
89.00719917686526
mu is
0.0
number of trials is
8000
number of Z or Y failures is
0
number of X failures is
0
average trial time
91.43968395430028
mu is
0.0
number of trials is
8200
number of Z or Y failures is
0
number of X failures is
0
average trial time
93.90663465142026
mu is
0.0
number of trials is
8400
number of Z or Y failures is
0
number of X failures is
0
average trial time
96.37392296610031
mu is
0.0
number of trials is
8600
number of Z or Y failures is
0
number of X failures is
0
average trial time
98.81961523643037
mu is
0.0
number of trials is
8800
number of Z or Y failures is
0
number of X failures is
0
average trial time
101.25594248333523
mu is
0.0
number of trials is
9000
number of Z or Y failures is
0
number of X failures is
0
average trial time
103.71169432058527
mu is
0.0
number of trials is
9200
number of Z or Y failures is
0
number of X failures is
0
average trial time
106.15858322908042
mu is
0.0
number of trials is
9400
number of Z or Y failures is
0
number of X failures is
0
average trial time
108.5881718142604
mu is
0.0
number of trials is
9600
number of Z or Y failures is
0
number of X failures is
0
average trial time
111.04698369826538
mu is
0.0
number of trials is
9800
number of Z or Y failures is
0
number of X failures is
0
average trial time
113.49669166895029
mu is
0.0
number of trials is
10000
number of Z or Y failures is
0
number of X failures is
0
average trial time
115.94569097003036
mu is
0.0
number of trials is
10200
number of Z or Y failures is
0
number of X failures is
0
average trial time
118.43268334959538
mu is
0.0
number of trials is
10400
number of Z or Y failures is
0
number of X failures is
0
average trial time
120.84471036535042
mu is
0.0
number of trials is
10600
number of Z or Y failures is
0
number of X failures is
0
average trial time
123.2679131633404
mu is
0.0
number of trials is
10800
number of Z or Y failures is
0
number of X failures is
0
average trial time
125.70272567240531
mu is
0.0
number of trials is
11000
number of Z or Y failures is
0
number of X failures is
0
average trial time
128.12658197672042
mu is
0.0
number of trials is
11200
number of Z or Y failures is
0
number of X failures is
0
average trial time
130.53937255185045
mu is
0.0
number of trials is
11400
number of Z or Y failures is
0
number of X failures is
0
average trial time
132.9563939397906
mu is
0.0
number of trials is
11600
number of Z or Y failures is
0
number of X failures is
0
average trial time
135.39002057379557
mu is
0.0
number of trials is
11800
number of Z or Y failures is
0
number of X failures is
0
average trial time
137.8158159092256
mu is
0.0
number of trials is
12000
number of Z or Y failures is
0
number of X failures is
0
average trial time
140.24972402514058
mu is
0.0
number of trials is
12200
number of Z or Y failures is
0
number of X failures is
0
average trial time
142.65888554667566
mu is
0.0
number of trials is
12400
number of Z or Y failures is
0
number of X failures is
0
average trial time
145.08808830934072
mu is
0.0
number of trials is
12600
number of Z or Y failures is
0
number of X failures is
0
average trial time
147.48377578205077
mu is
0.0
number of trials is
12800
number of Z or Y failures is
0
number of X failures is
0
average trial time
149.87327272592074
mu is
0.0
number of trials is
13000
number of Z or Y failures is
0
number of X failures is
0
average trial time
152.26666541443572
mu is
0.0
number of trials is
13200
number of Z or Y failures is
0
number of X failures is
0
average trial time
154.68274188306083
mu is
0.0
number of trials is
13400
number of Z or Y failures is
0
number of X failures is
0
average trial time
157.09284034598073
mu is
0.0
number of trials is
13600
number of Z or Y failures is
0
number of X failures is
0
average trial time
159.46935644976574
mu is
0.0
number of trials is
13800
number of Z or Y failures is
0
number of X failures is
0
average trial time
161.8559504465607
mu is
0.0
number of trials is
14000
number of Z or Y failures is
0
number of X failures is
0
average trial time
164.26913732939073
mu is
0.0
number of trials is
14200
number of Z or Y failures is
0
number of X failures is
0
average trial time
166.6573492633556
mu is
0.0
number of trials is
14400
number of Z or Y failures is
0
number of X failures is
0
average trial time
169.04583893928054
mu is
0.0
number of trials is
14600
number of Z or Y failures is
0
number of X failures is
0
average trial time
171.4396289584355
The SVD algorithm `"divide_and_conquer"` has thrown an error,
likely because of a convergance failure. You can try
other SVD algorithms that may converge better using the
`alg` (or `svd_alg` if called through `factorize` or MPS/MPO functionality) keyword argument:

 - "divide_and_conquer" is a divide-and-conquer algorithm
   (LAPACK's `gesdd`). It is fast, but may lead to some innacurate
   singular values for very ill-conditioned matrices.
   It also may sometimes fail to converge, leading to errors
   (in which case `"qr_iteration"` or `"recursive"` can be tried).

 - `"qr_iteration"` (LAPACK's `gesvd`) is typically slower 
   than "divide_and_conquer", especially for large matrices,
   but is more accurate for very ill-conditioned matrices 
   compared to `"divide_and_conquer"`.

 - `"recursive"` is ITensor's custom SVD algorithm. It is very
   reliable, but may be slow if high precision is needed.
   To get an `svd` of a matrix `A`, an eigendecomposition of
   ``A^{\dagger} A`` is used to compute `U` and then a `qr` of
   ``A^{\dagger} U`` is used to compute `V`. This is performed
   recursively to compute small singular values.

Returning `nothing`. For an output `F = svd(A, ...)` you can check if
`isnothing(F)` in your code and try a different algorithm.

To suppress this message in the future, you can wrap the `svd` call in the
`@suppress` macro from the `Suppressor` package.

